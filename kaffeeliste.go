package main

import (
	"fmt"
	"os"

	"github.com/akamensky/argparse"
)

var (
	// Pfad zur Konfigurationsdatei
	configFilePath *string

	// Vollst√§ndige Konfigurationsdatei als Wert
	width *int

	// Kaffeetrinker-Namen
	names *[]string

	// Text im Footer
	footerText string = "Generated by Kaffeelist"
)

const (
	verticalChar   string = "-"
	horizontalChar string = "|"
	whitespaceChar string = " "
	plusChar       string = "+"
)

func main() {
	parseArguments()
	printHeader()
	printTable()
	printFooter()
}

// Liest die command-line-Parameter ein.
func parseArguments() {
	// Parser
	parser := argparse.NewParser("Kaffeeliste", "Generates a list containing all coffee-trinkers to make a tick for every coffee")

	// Parameter
	configFilePath = parser.String("f", "file", &argparse.Options{Required: false, Help: "path of configuration file"})
	width = parser.Int("w", "width", &argparse.Options{Required: false, Default: 80, Help: "page width (characters per line)"})
	names = parser.StringList("n", "name", &argparse.Options{Required: true, Help: "names of the coffee-trinkers"})

	// Im Fehlerfall Hilfe ausgeben
	err := parser.Parse(os.Args)
	if err != nil {
		fmt.Print(parser.Usage(err))
		os.Exit(1)
	}
}

// Schreibt den Header auf stdout.
func printHeader() {
	printHorizontalLine()
}

// Schreibt die Tabelle auf stdout.
func printTable() {

	for _, name := range *names {
		printRowForName(name)
	}
}

// Schreibt den Footer auf stdout.
func printFooter() {
	printHorizontalLine()
}

// Generiert einen horizontalen Trenner anhand der width.
func printHorizontalLine() {
	for i := 0; i < *width; i++ {
		if i == 0 || i == *width-1 {
			fmt.Print(plusChar)
		} else {
			fmt.Print(verticalChar)
		}
	}
	fmt.Print("\n")
}

func printRowForName(name string) {
	for i := 0; i < *width; i++ {
		switch i {
		case 0:
			// Linke Tabellengrenze
			fmt.Print(horizontalChar)
			break
		case *width - 1:
			// Rechte Tabellengrenze
			fmt.Println(horizontalChar)
			printHorizontalLine()
			break
		case 3:
			// Name
			fmt.Print(name)
			i += len(name) - 1
			break
		default:
			// Nix
			fmt.Print(whitespaceChar)
		}
	}
}
